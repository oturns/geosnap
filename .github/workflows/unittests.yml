 name: Unit Tests 
 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'

 jobs:
   unittests:
     name: CI (${{ matrix.os }}-${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
     continue-on-error: ${{ matrix.experimental }}
     timeout-minutes: 90 
     strategy:
       matrix:
         os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
         environment-file: [.ci/37.yml, .ci/38.yml, .ci/39.yml]
         experimental: [false]
     defaults:
        run:
         shell: bash -l {0}
     steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         env:
           CACHE_NUMBER: 0
         with:
           path: ~/conda_pkgs_dir
           key: ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles(matrix.environment-file) }}
       - uses: conda-incubator/setup-miniconda@v2
         with:
            miniconda-version: 'latest'
            mamba-version: '*'
            channels: conda-forge
            channel-priority: strict
            auto-update-conda: false
            auto-activate-base: false
            environment-file: ${{ matrix.environment-file }}
            activate-environment: test
            use-only-tar-bz2: true
       - run: conda info --all
       - run: conda list
       - run: conda config --show-sources
       - run: conda config --show
       - run: pip install -e . --no-deps --force-reinstall
       - name: Download Data
         shell: bash -l {0}
         run: python geosnap/tests/_dl_data.py
         env:
            COMBO_DATA: ${{ secrets.COMBO_DATA }}
       - name: Pytest
         shell: bash -l {0}
         run: |
           pytest -v geosnap --cov=geosnap --cov-report=xml
         env:
           LTDB_SAMPLE: ${{ secrets.COMBO_DATA }} # check whether we can pull secrets
           LTDB_FULL: ${{ secrets.COMBO_DATA }}
           NCDB: ${{ secrets.COMBO_DATA }}
       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
         uses: codecov/codecov-action@v1
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: geosnap-codecov
       - name: Notebook Tests
         if: ${{ env.COMBO_DATA }}
         shell: bash -l {0}
         run: jupyter nbconvert --to notebook --execute --inplace --ExecutePreprocessor.timeout=-1 --ExecutePreprocessor.kernel_name=python3 examples/*.ipynb;
